@model ViewModel

@{
    ViewData["Title"] = "Часть 1";
}

<div class="container">
    <h3>@Model.User.FirstName @Model.User.SecondName @Model.User.LastName</h3>
    <br />
    <br />
    <h4>Из предложенных вариантов выберете два:</h4>
    <ul>
        <li><h5>наиболее вам подходящее (Максимум)</h5></li>
        <li><h5>наиболее вам подходящее (Минимум)</h5></li>
    </ul>

    @{
        int quizzesAmmount = Model.FirstPart.TotalPages;
        string nextPage = !Model.FirstPart.HasNextPage ? "disabled" : "";
    }

    @foreach (var item in Model.FirstPart)
    {
        <form>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Вопрос @item.Id (@quizzesAmmount) </th>
                        <th scope="col">Минимум</th>
                        <th scope="col">Максимум</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">@item.QuizFirst</th>
                        <td>
                            <input type="radio" name="min" value="1"required>
                            <label >1</label>
                        </td>
                        <td>
                            <input type="radio" name="max" value="1" required>
                            <label>1</label>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@item.QuizSecond</th>
                        <td>
                            <input type="radio" name="min" value="2" required>
                            <label>2</label>
                        </td>
                        <td>
                            <input type="radio" name="max" value="2" required>
                            <label>2</label>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@item.QuizThird</th>
                        <td>
                            <input type="radio" name="min" value="3" required>
                            <label>3</label>
                        </td>
                        <td>
                            <input type="radio" name="max" value="3" required>
                            <label>3</label>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@item.QuizFourth</th>
                        <td>
                            <input type="radio" name="min" value="4" required>
                            <label>4</label>
                        </td>
                        <td>
                            <input type="radio" name="max" value="4" required>
                            <label>4</label>
                        </td>
                    </tr>
                </tbody>
            </table>
        </form>
    }
    @{
        if (Model.FirstPart.HasNextPage)
        {
            <a asp-area="" asp-controller="FirstPart" asp-action="Quiz" asp-route-page="@(Model.FirstPart.PageIndex + 1)" class="btn btn-outline-danger @nextPage" id="next">Далее</a>
        }
        else
        {
            <a asp-area="" asp-controller="SecondPart" asp-action="Quiz" asp-route-id="@Model.User.Id" class="btn btn-outline-danger" id="next">2 Часть</a>
        }
    }
    <p class="text-danger output"></p>
</div>

<script>
const output = document.querySelector(".output");
const radioButtonsMin = document.querySelectorAll('input[name="min"]');
const radioButtonsMax = document.querySelectorAll('input[name="max"]');
const btn = document.querySelector("#next");
btn.addEventListener("click", (e) => {
    let min;
    let max;
    for (const m of radioButtonsMin) {
        if (m.checked) {
            min = m.value;
            break;
        }
    }
    for (const m of radioButtonsMax) {
        if (m.checked) {
            max = m.value;
            break;
        }
    }
    
    if (min === undefined) {
        output.innerText = `Необходимо выбрать варианты ответа`;
        e.preventDefault();
    }

    if (max === undefined) {
        output.innerText = `Необходимо выбрать варианты ответа`;
        e.preventDefault();
    }

    if (min === max) {
        output.innerText = `Выберете два разные варианта`;
        e.preventDefault();
    }
});
</script>